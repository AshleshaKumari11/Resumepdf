@model EmployeesDetails.EmployeeDetail

@{
    ViewBag.Title = "Create";
}

@*<h2>Create</h2>*@

<style>
    .btn {
        background-color: #4CAF50; /* Green */
        border: none;
        color: white;
        text-align: center;
        display: inline-block;
        font-size: 16px;
    }

    .control-label {
        text-align: left !important;
        border: black;
    }

    .form-control {
        border: 1px solid #000 !important;
    }

    .txtarea {
        border: 1px solid #000 !important;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4><b>Enter Employee Details</b></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="container-fluid">
            <div class="row" style='padding-bottom:10px'>
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-sm-3 col-md-4">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-sm-3 col-md-4">
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style='padding-bottom:10px'>
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-sm-3 col-md-4">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                @*@Html.LabelFor(model => model.TechnicalSkills, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Technical Experience</label>
                <div class="col-sm-3 col-md-4">
                    @Html.TextAreaFor(model => model.TechnicalSkills, new { cols = "100", rows = "4", maxlength = 500 })<br />
                    @Html.ValidationMessageFor(model => model.TechnicalSkills, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="row" style='padding-bottom:10px'>
                <label class="control-label col-md-2">Project  Details</label>
                @*@Html.LabelFor(model => model.ProjectDetails, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-sm-3 col-md-4">
                    @Html.TextAreaFor(model => model.ProjectDetails, new { cols = "100", rows = "4", maxlength = 500 })<br />
                    @Html.ValidationMessageFor(model => model.ProjectDetails, "", new { @class = "text-danger" })
                </div>
                <label class="control-label col-md-2">Relevant Experience</label>
                @*@Html.LabelFor(model => model.RelevantExperience, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-sm-3 col-md-4">
                    @*@Html.TextAreaFor(model => model.RelevantExperience, new { htmlAttributes = new { @class = "form-control txtarea"}})*@
                    @Html.TextAreaFor(model => model.RelevantExperience, new { cols = "100", rows = "4", maxlength = 500 })

                    @Html.ValidationMessageFor(model => model.RelevantExperience, "", new { @class = "text-danger" })
                </div>

            </div>
        </div>

        <div class="container-fluid">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @*<a href='@Url.Action("Index", "Employee")' class="btn btn-primary" style="background-color:grey !important">Back to List</a>*@
                    <input type="submit" value="Save" id="Submitbtn" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>

}

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Successfull</h4>
            </div>
            <div class="modal-body">

                @ViewBag.SuccessMessage

            </div>
            <div class="modal-footer">

                <button type="button" class="btn btn-primary" onclick="location.href='EnterEmployeeDetails';">Ok</button>
            </div>
        </div>
    </div>
</div>

         @if (ViewBag.SuccessMessage != null)
    {
<script type="text/javascript">
    window.onload = function () {
        $("#myModal").modal('show')
    };

            
</script>

    }



<div>
    @*@Html.ActionLink("Back to List", "Index")*@
    @*<a href='@Url.Action("Index", "Employee")' class="btn btn-primary" style="background-color:grey !important">Back to List</a>*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
